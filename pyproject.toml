[tool.poetry]
name = "plastic-origins"
version = "2.2.1a0"

description = "A package containing methods commonly used to make inferences"
repository = "https://github.com/surfriderfoundationeurope/surfnet"
homepage = "https://www.plasticorigins.eu/"
readme = "README.md"
authors = ["Chayma Mesbahi <chayma.mesbahi@neoxia.com>"]
license = "MIT"

packages = [
    { include = "plasticorigins", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
opencv-python = "4.5.5.62"
pycocotools = "2.0.4"
debugpy = "1.5.1"
scipy = "1.7.3"
tqdm = "^4.64.1"
imgaug = "0.4.0"
psycopg2-binary = "2.9.3"
Flask = "2.0.3"
Werkzeug = "2.0.3"
gunicorn = "^20.1.0"
torch = "^1.13.0"
torchvision = "^0.14.0"
scikit-video = "^1.1.11"
scikit-learn = "^1.1.0"
pykalman = "^0.9.5"
Pillow = "9.1.1"
yolov5 = "^6.2.3"
pandas = "1.5.0"
mkdocs = "^1.4.2"
azure-storage-blob = "^12.14.1"
azure-identity = "^1.12.0"
azure-keyvault-secrets = "^4.6.0"
python-dotenv = "^0.21.0"

[tool.poetry.dev-dependencies]
pytest = "^7.1.1"
coverage = "^6.3.2"

flake8 = "^4.0.1"
black = "^22.3.0"
pre-commit = "^2.18.1"
pyupgrade = "^2.32.0"
# coverage configuration
[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
branch = true
source = ["plasticorigins"]
omit = ["src/plasticorigins/detection/centernet/networks/dlav0.py",
        "src/plasticorigins/detection/centernet/networks/large_hourglass.py",
        "src/plasticorigins/detection/centernet/networks/msra_resnet.py",
        "src/plasticorigins/detection/centernet/networks/pose_dla_dcn.py",
        "src/plasticorigins/detection/centernet/networks/resnet_dcn.py",
        "src/plasticorigins/detection/centernet/models.py",
        "src/plasticorigins/training/setup.py",
        "src/plasticorigins/training/test_environment.py",
        "src/plasticorigins/serving/wsgi.py",
        "src/plasticorigins/detection/coco_utils.py",
        "src/plasticorigins/detection/losses.py",
        "src/plasticorigins/detection/yolo.py",
        "src/plasticorigins/training/data/make_dataset.py",
        "src/plasticorigins/training/visualization/categories.py"
        ]

[tool.coverage.report]
show_missing = true
fail_under = 10

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
